// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageDeleteBlockACK.proto

#ifndef PROTOBUF_MessageDeleteBlockACK_2eproto__INCLUDED
#define PROTOBUF_MessageDeleteBlockACK_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageDeleteBlockACK_2eproto();
void protobuf_AssignDesc_MessageDeleteBlockACK_2eproto();
void protobuf_ShutdownFile_MessageDeleteBlockACK_2eproto();

class MessageDeleteBlockACK;

// ===================================================================

class MessageDeleteBlockACK : public ::google::protobuf::Message {
 public:
  MessageDeleteBlockACK();
  virtual ~MessageDeleteBlockACK();

  MessageDeleteBlockACK(const MessageDeleteBlockACK& from);

  inline MessageDeleteBlockACK& operator=(const MessageDeleteBlockACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDeleteBlockACK& default_instance();

  void Swap(MessageDeleteBlockACK* other);

  // implements Message ----------------------------------------------

  MessageDeleteBlockACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDeleteBlockACK& from);
  void MergeFrom(const MessageDeleteBlockACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // required string Message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // required int64 ClientId = 3;
  inline bool has_clientid() const;
  inline void clear_clientid();
  static const int kClientIdFieldNumber = 3;
  inline ::google::protobuf::int64 clientid() const;
  inline void set_clientid(::google::protobuf::int64 value);

  // required int64 Index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int64 index() const;
  inline void set_index(::google::protobuf::int64 value);

  // required string Path = 5;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 5;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // required int64 PartId = 6;
  inline bool has_partid() const;
  inline void clear_partid();
  static const int kPartIdFieldNumber = 6;
  inline ::google::protobuf::int64 partid() const;
  inline void set_partid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MessageDeleteBlockACK)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_partid();
  inline void clear_has_partid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::int64 clientid_;
  ::google::protobuf::int64 index_;
  ::std::string* path_;
  ::google::protobuf::int64 partid_;
  ::google::protobuf::int32 code_;
  friend void  protobuf_AddDesc_MessageDeleteBlockACK_2eproto();
  friend void protobuf_AssignDesc_MessageDeleteBlockACK_2eproto();
  friend void protobuf_ShutdownFile_MessageDeleteBlockACK_2eproto();

  void InitAsDefaultInstance();
  static MessageDeleteBlockACK* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageDeleteBlockACK

// required int32 Code = 1;
inline bool MessageDeleteBlockACK::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDeleteBlockACK::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDeleteBlockACK::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDeleteBlockACK::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 MessageDeleteBlockACK::code() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.Code)
  return code_;
}
inline void MessageDeleteBlockACK::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.Code)
}

// required string Message = 2;
inline bool MessageDeleteBlockACK::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDeleteBlockACK::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDeleteBlockACK::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDeleteBlockACK::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& MessageDeleteBlockACK::message() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.Message)
  return *message_;
}
inline void MessageDeleteBlockACK::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.Message)
}
inline void MessageDeleteBlockACK::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageDeleteBlockACK.Message)
}
inline void MessageDeleteBlockACK::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageDeleteBlockACK.Message)
}
inline ::std::string* MessageDeleteBlockACK::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MessageDeleteBlockACK.Message)
  return message_;
}
inline ::std::string* MessageDeleteBlockACK::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageDeleteBlockACK::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MessageDeleteBlockACK.Message)
}

// required int64 ClientId = 3;
inline bool MessageDeleteBlockACK::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageDeleteBlockACK::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageDeleteBlockACK::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageDeleteBlockACK::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::int64 MessageDeleteBlockACK::clientid() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.ClientId)
  return clientid_;
}
inline void MessageDeleteBlockACK::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.ClientId)
}

// required int64 Index = 4;
inline bool MessageDeleteBlockACK::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageDeleteBlockACK::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageDeleteBlockACK::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageDeleteBlockACK::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::int64 MessageDeleteBlockACK::index() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.Index)
  return index_;
}
inline void MessageDeleteBlockACK::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.Index)
}

// required string Path = 5;
inline bool MessageDeleteBlockACK::has_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageDeleteBlockACK::set_has_path() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageDeleteBlockACK::clear_has_path() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageDeleteBlockACK::clear_path() {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& MessageDeleteBlockACK::path() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.Path)
  return *path_;
}
inline void MessageDeleteBlockACK::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.Path)
}
inline void MessageDeleteBlockACK::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageDeleteBlockACK.Path)
}
inline void MessageDeleteBlockACK::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageDeleteBlockACK.Path)
}
inline ::std::string* MessageDeleteBlockACK::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MessageDeleteBlockACK.Path)
  return path_;
}
inline ::std::string* MessageDeleteBlockACK::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageDeleteBlockACK::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MessageDeleteBlockACK.Path)
}

// required int64 PartId = 6;
inline bool MessageDeleteBlockACK::has_partid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageDeleteBlockACK::set_has_partid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageDeleteBlockACK::clear_has_partid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageDeleteBlockACK::clear_partid() {
  partid_ = GOOGLE_LONGLONG(0);
  clear_has_partid();
}
inline ::google::protobuf::int64 MessageDeleteBlockACK::partid() const {
  // @@protoc_insertion_point(field_get:MessageDeleteBlockACK.PartId)
  return partid_;
}
inline void MessageDeleteBlockACK::set_partid(::google::protobuf::int64 value) {
  set_has_partid();
  partid_ = value;
  // @@protoc_insertion_point(field_set:MessageDeleteBlockACK.PartId)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageDeleteBlockACK_2eproto__INCLUDED
